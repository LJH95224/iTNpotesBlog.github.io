(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{529:function(e,t,a){"use strict";a.r(t);var n=a(42),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"vue-面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-面试题"}},[e._v("#")]),e._v(" Vue 面试题")]),e._v(" "),a("h3",{attrs:{id:"_1-写-vue-项目时为什么要在列表组件中写-key-其作用是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-写-vue-项目时为什么要在列表组件中写-key-其作用是什么"}},[e._v("#")]),e._v(" 1. 写 Vue 项目时为什么要在列表组件中写 key，其作用是什么？")]),e._v(" "),a("p",[e._v("1、元素的唯一性，diff方法中提高了匹配元素index的性能。有key时遍历key-index对象（快），无key时遍历旧Vnode（慢）。")]),e._v(" "),a("p",[e._v("2、在元素list一直变化的情况下，key值设置唯一时，能很精确找到/找不到变更元素，key不唯一时，不能精确找到要匹配的元素。")]),e._v(" "),a("h3",{attrs:{id:"_2-聊聊-redux-和-vuex-的设计思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-聊聊-redux-和-vuex-的设计思想"}},[e._v("#")]),e._v(" 2. 聊聊 Redux 和 Vuex 的设计思想")]),e._v(" "),a("p",[e._v("题目是讨论两者的设计思想，我从共同点和区别方面大致说一下：\n"),a("strong",[e._v("共同点")]),e._v("\n首先两者都是处理全局状态的工具库，大致实现思想都是：\n全局 state 保存状态 --\x3e dispatch(action) --\x3e reducer(vuex里的mutation) --\x3e 生成 newState 整个状态为同步操作;\n"),a("strong",[e._v("区别")]),e._v("\n最大的区别在于处理异步的不同，vuex 里面多了一步 commit 操作， 在 action 之后 commit(mutation) 之前处理异步，而 redux 里面则是通过中间件处理。")])])}),[],!1,null,null,null);t.default=r.exports}}]);